openapi: 3.0.1
info:
  title: Cereal API
  version: 1.0.0
paths:
  /api/cereals:
    get:
      summary: Returns a list of cereal
      responses:
        '200':
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cereal'
  /api/cereals/{id}:
    get:
      summary: Returns a specific cereal from given ID

      description: >-
        For valid response try integer IDs with value >= 1.       
        Other values will generated exceptions
      parameters:
        - name: id
          in: path
          description: ID of the cereal that needs to be fetched
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: Cereal found
          content: 
            application/xml:
              schema:
                $ref: '#/components/schemas/Cereal'
        '204':
          description: Cereal not found
          content: {}
          
  /api/cereals/filter:
    get:
      summary: Returns all filtered cereals
      parameters:
        - in: query
          name: field
          schema:
            type: string
            example: id
          description: Field of the cereal to be filtered from
        - in: query
          name: opval
          schema:
            type: string
            example: <=20
          description: Operator first, available operators =, !=, <, <=, >, >=,
                       Value to filter upon last
      responses:
        '200':
          description: Cereals found matching filter
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Cereal'
        '400':
          description: Invalid formed filter request
          content: {}
        '204':
          description: No cereals matching filters
          content: {}
  /api/cereals/getimage/{id}:
    get:
      summary: Returns a image file of the cereal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 4
      responses:
        '200':
          description: Image file in .png, .jfif, .jpg or jpeg
          content:
            image:
              schema:
                $ref: '#/components/schemas/Image'
        '204':
          description: No image file available
          content: {}    
  '/api/cereals/delete/{id}':
    delete:
      summary: Deletes a cereal from the database
      security: 
        - BasicAuth: []
      parameters:
        - name : id
          in: path
          required: true
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: Cereal deleted
          content: {}
        '204':
          description: Cereal not found
          content: {}
  '/api/cereals/add/':
    post:
      summary: Adds a cereal to the database
      security: 
        - BasicAuth: []
      requestBody:
          description: Json of the cereal object to be added
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cereal'
      responses:
        '200':
          description: Cereal added
          content: {}
  '/api/cereals/add/{id}':
    put:
      summary: Updates a cereal information
      security: 
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 5
      requestBody:
          description: Json of the cereal object to be updated, requires 1 or more fields to be filled
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cereal'
      responses:
        '200':
          description: cereal updated
          content: {}
        '204':
          description: cereal dosent exist
          content: {}
        
  
                
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      
  schemas:
    Image:
      properties:
        imagefile:
          description: Image file comes in .png, .jfif, .jpg and jpeg
          type: string
          format: binary
    User:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        password:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Cereal:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: All-brand flakes
        mfr:
          type: string
          enum:
            - G
            - R
            - N
            - K
            - Q
            - P
            - A
        type:
          type: string
          enum:
            - C
            - H
        calories:
          type: integer
          minimum: 0
          example: 120
        protein:
          type: integer
          minimum: 0
          maximum: 100
          example: 3
        fat:
          type: integer
          minimum: 0
          maximum: 100
          example: 1
        sodium:
          type: integer
          minimum: 0
          example: 130
        fiber:
          type: number
          minimum: 0
          maximum: 100
          example: 1.5
        carbo:
          type: number
          minimum: 0
          maximum: 100
          example: 10.5
        sugars:
          type: integer
          minimum: 0
          maximum: 100
          example: 14
        potass:
          type: integer
          minimum: 0
          example: 320
        vitamins:
          type: integer
          minimum: 0
          maximum: 100
          example: 25
        shelf:
          type: integer
          example: 2
        weight:
          type: number
          minimum: 0
          example: 1.3
        cups:
          type: number
          minimum: 0
          maximum: 100
          example: 0.72
        ratings:
          type: integer
          example: 323234